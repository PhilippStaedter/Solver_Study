#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"
#include "dwdx.h"

void J_Liu2011(realtype *J, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *w, const realtype *dwdx){
    J[0] = -1.0*dwdx0 - 1.0*dwdx1;
    J[1] = -1.0*dwdx2;
    J[2] = -1.0*dwdx3;
    J[19] = -1.0*dwdx54;
    J[24] = -1.0*dwdx68;
    J[42] = -1.0*dwdx0;
    J[43] = -1.0*dwdx2;
    J[44] = -1.0*dwdx3;
    J[84] = 1.0*dwdx0;
    J[85] = 1.0*dwdx2;
    J[86] = 1.0*dwdx3 - 1.0*dwdx4 - 1.0*dwdx5 - 1.0*dwdx6;
    J[91] = -1.0*dwdx25;
    J[92] = -1.0*dwdx29;
    J[104] = -1.0*dwdx55;
    J[106] = -1.0*dwdx60;
    J[110] = -1.0*dwdx75;
    J[111] = -1.0*dwdx84;
    J[129] = -1.0*dwdx10 - 1.0*dwdx11 - 1.0*dwdx12 - 1.0*dwdx13 - 1.0*dwdx14 - 1.0*dwdx7 - 1.0*dwdx8 - 1.0*dwdx9;
    J[134] = -1.0*dwdx30;
    J[147] = -1.0*dwdx58;
    J[149] = -1.0*dwdx65;
    J[151] = -1.0*dwdx73;
    J[159] = -1.0*dwdx90;
    J[161] = -1.0*dwdx95;
    J[162] = -1.0*dwdx99;
    J[166] = -1.0*dwdx105;
    J[171] = 1.0*dwdx10 + 1.0*dwdx11 + 1.0*dwdx12 + 1.0*dwdx13 + 1.0*dwdx14 + 1.0*dwdx7 + 1.0*dwdx8 + 1.0*dwdx9;
    J[176] = 1.0*dwdx30;
    J[189] = 1.0*dwdx58;
    J[191] = 1.0*dwdx65;
    J[193] = 1.0*dwdx73;
    J[201] = 1.0*dwdx90;
    J[203] = 1.0*dwdx95;
    J[204] = 1.0*dwdx99;
    J[208] = 1.0*dwdx105;
    J[213] = 1.0*dwdx10 + 1.0*dwdx11 + 1.0*dwdx12 + 1.0*dwdx13 + 1.0*dwdx14 + 1.0*dwdx7 + 1.0*dwdx8 + 1.0*dwdx9;
    J[215] = -1.0*dwdx15 - 1.0*dwdx16;
    J[218] = 1.0*dwdx30;
    J[219] = -1.0*dwdx32;
    J[221] = -1.0*dwdx33 + 1.0*dwdx37;
    J[231] = 1.0*dwdx58;
    J[233] = 1.0*dwdx65;
    J[235] = 1.0*dwdx73;
    J[236] = -1.0*dwdx78 + 1.0*dwdx79;
    J[240] = -1.0*dwdx86;
    J[243] = 1.0*dwdx90;
    J[245] = 1.0*dwdx95;
    J[246] = 1.0*dwdx99;
    J[250] = 1.0*dwdx105;
    J[258] = -1.0*dwdx17 - 1.0*dwdx18 - 1.0*dwdx19 - 1.0*dwdx20 - 1.0*dwdx21 - 1.0*dwdx22 - 1.0*dwdx23 - 1.0*dwdx24;
    J[260] = -1.0*dwdx31;
    J[273] = -1.0*dwdx59;
    J[275] = -1.0*dwdx66;
    J[277] = -1.0*dwdx74;
    J[285] = -1.0*dwdx91;
    J[287] = -1.0*dwdx96;
    J[288] = -1.0*dwdx100;
    J[292] = -1.0*dwdx106;
    J[296] = -1.0*dwdx4;
    J[301] = -1.0*dwdx25 - 1.0*dwdx26 - 1.0*dwdx27 - 1.0*dwdx28;
    J[302] = -1.0*dwdx29;
    J[316] = -1.0*dwdx62;
    J[317] = -1.0*dwdx67;
    J[318] = -1.0*dwdx69;
    J[319] = -1.0*dwdx72;
    J[327] = -1.0*dwdx89;
    J[330] = -1.0*dwdx98;
    J[338] = 1.0*dwdx4;
    J[343] = 1.0*dwdx25;
    J[344] = 1.0*dwdx29;
    J[383] = -1.0*dwdx15;
    J[384] = 1.0*dwdx17 + 1.0*dwdx18 + 1.0*dwdx19 + 1.0*dwdx20 + 1.0*dwdx21 + 1.0*dwdx22 + 1.0*dwdx23 + 1.0*dwdx24;
    J[386] = 1.0*dwdx31;
    J[387] = -1.0*dwdx32;
    J[389] = -1.0*dwdx33 + 1.0*dwdx37;
    J[399] = 1.0*dwdx59;
    J[401] = 1.0*dwdx66;
    J[403] = 1.0*dwdx74;
    J[404] = 1.0*dwdx79;
    J[411] = 1.0*dwdx91;
    J[413] = 1.0*dwdx96;
    J[414] = 1.0*dwdx100;
    J[418] = 1.0*dwdx106;
    J[426] = 1.0*dwdx17 + 1.0*dwdx18 + 1.0*dwdx19 + 1.0*dwdx20 + 1.0*dwdx21 + 1.0*dwdx22 + 1.0*dwdx23 + 1.0*dwdx24;
    J[428] = 1.0*dwdx31;
    J[441] = 1.0*dwdx59;
    J[443] = 1.0*dwdx66;
    J[445] = 1.0*dwdx74;
    J[453] = 1.0*dwdx91;
    J[455] = 1.0*dwdx96;
    J[456] = 1.0*dwdx100;
    J[460] = 1.0*dwdx106;
    J[467] = 1.0*dwdx15;
    J[471] = 1.0*dwdx32;
    J[473] = 1.0*dwdx33 - 1.0*dwdx35 - 1.0*dwdx36 - 1.0*dwdx37 - 1.0*dwdx38 - 1.0*dwdx39;
    J[479] = -1.0*dwdx49;
    J[488] = -1.0*dwdx77 - 1.0*dwdx79 - 1.0*dwdx80;
    J[493] = -1.0*dwdx87;
    J[515] = -1.0*dwdx34;
    J[516] = -1.0*dwdx40;
    J[557] = 1.0*dwdx34;
    J[558] = 1.0*dwdx40;
    J[599] = 1.0*dwdx34;
    J[600] = 1.0*dwdx40;
    J[602] = -1.0*dwdx41 - 1.0*dwdx42;
    J[603] = -1.0*dwdx43;
    J[644] = 1.0*dwdx41;
    J[645] = 1.0*dwdx43;
    J[688] = -1.0*dwdx44 - 1.0*dwdx45 - 1.0*dwdx46 - 1.0*dwdx47 - 1.0*dwdx48;
    J[691] = -1.0*dwdx53;
    J[693] = -1.0*dwdx57;
    J[694] = -1.0*dwdx61;
    J[695] = -1.0*dwdx64;
    J[696] = -1.0*dwdx71;
    J[705] = -1.0*dwdx92;
    J[707] = -1.0*dwdx94;
    J[708] = -1.0*dwdx97;
    J[710] = -1.0*dwdx102;
    J[712] = -1.0*dwdx104;
    J[725] = 1.0*dwdx35;
    J[731] = 1.0*dwdx49 - 1.0*dwdx50;
    J[740] = -1.0*dwdx81;
    J[746] = -1.0*dwdx88;
    J[774] = -1.0*dwdx51;
    J[775] = -1.0*dwdx52;
    J[776] = -1.0*dwdx56;
    J[798] = -1.0*dwdx1;
    J[814] = -1.0*dwdx45;
    J[816] = 1.0*dwdx51;
    J[817] = 1.0*dwdx52 - 1.0*dwdx53 - 1.0*dwdx54;
    J[818] = 1.0*dwdx56;
    J[819] = -1.0*dwdx57;
    J[822] = -1.0*dwdx68;
    J[842] = -1.0*dwdx5;
    J[858] = -1.0*dwdx51;
    J[859] = -1.0*dwdx52;
    J[860] = -1.0*dwdx55 - 1.0*dwdx56;
    J[862] = -1.0*dwdx60;
    J[898] = 1.0*dwdx45;
    J[901] = 1.0*dwdx53;
    J[903] = 1.0*dwdx57;
    J[926] = 1.0*dwdx5;
    J[931] = -1.0*dwdx27;
    J[940] = -1.0*dwdx44;
    J[944] = 1.0*dwdx55;
    J[946] = 1.0*dwdx60 - 1.0*dwdx61 - 1.0*dwdx62 - 1.0*dwdx63;
    J[947] = -1.0*dwdx64;
    J[950] = -1.0*dwdx83;
    J[957] = -1.0*dwdx89;
    J[958] = -1.0*dwdx93;
    J[973] = -1.0*dwdx28;
    J[982] = 1.0*dwdx44;
    J[988] = 1.0*dwdx61;
    J[989] = 1.0*dwdx64 - 1.0*dwdx67;
    J[1002] = -1.0*dwdx98;
    J[1008] = 1.0*dwdx1;
    J[1015] = -1.0*dwdx26;
    J[1024] = -1.0*dwdx46;
    J[1027] = 1.0*dwdx54;
    J[1032] = 1.0*dwdx68 - 1.0*dwdx69 - 1.0*dwdx70 - 1.0*dwdx71;
    J[1033] = -1.0*dwdx72;
    J[1034] = -1.0*dwdx76;
    J[1036] = -1.0*dwdx85;
    J[1043] = -1.0*dwdx94;
    J[1057] = 1.0*dwdx26;
    J[1074] = 1.0*dwdx69;
    J[1075] = 1.0*dwdx72;
    J[1094] = -1.0*dwdx6;
    J[1097] = -1.0*dwdx16;
    J[1103] = -1.0*dwdx38;
    J[1109] = -1.0*dwdx50;
    J[1114] = -1.0*dwdx63;
    J[1116] = -1.0*dwdx70;
    J[1118] = -1.0*dwdx75 - 1.0*dwdx76 - 1.0*dwdx78 - 1.0*dwdx80 - 1.0*dwdx81 - 1.0*dwdx82 - 1.0*dwdx83;
    J[1119] = -1.0*dwdx84;
    J[1120] = -1.0*dwdx85;
    J[1122] = -1.0*dwdx86;
    J[1123] = -1.0*dwdx87;
    J[1124] = -1.0*dwdx88;
    J[1126] = -1.0*dwdx93;
    J[1136] = 1.0*dwdx6;
    J[1160] = 1.0*dwdx75;
    J[1161] = 1.0*dwdx84;
    J[1200] = 1.0*dwdx70;
    J[1202] = 1.0*dwdx76;
    J[1204] = 1.0*dwdx85;
    J[1229] = 1.0*dwdx36;
    J[1244] = 1.0*dwdx77;
    J[1265] = 1.0*dwdx16;
    J[1286] = 1.0*dwdx78;
    J[1290] = 1.0*dwdx86;
    J[1313] = 1.0*dwdx38;
    J[1328] = 1.0*dwdx80;
    J[1333] = 1.0*dwdx87;
    J[1361] = 1.0*dwdx50;
    J[1370] = 1.0*dwdx81;
    J[1376] = 1.0*dwdx88;
    J[1393] = 1.0*dwdx27;
    J[1402] = -1.0*dwdx47;
    J[1408] = 1.0*dwdx62;
    J[1419] = 1.0*dwdx89 - 1.0*dwdx92;
    J[1422] = -1.0*dwdx97;
    J[1450] = 1.0*dwdx63;
    J[1454] = 1.0*dwdx83;
    J[1462] = 1.0*dwdx93;
    J[1486] = 1.0*dwdx46;
    J[1494] = 1.0*dwdx71;
    J[1505] = 1.0*dwdx94;
    J[1519] = 1.0*dwdx28;
    J[1528] = 1.0*dwdx47;
    J[1535] = 1.0*dwdx67;
    J[1545] = 1.0*dwdx92;
    J[1548] = 1.0*dwdx97 + 1.0*dwdx98;
    J[1612] = -1.0*dwdx48;
    J[1634] = 1.0*dwdx101 - 1.0*dwdx102;
    J[1635] = 1.0*dwdx103;
    J[1636] = -1.0*dwdx104;
    J[1637] = 1.0*dwdx107;
    J[1676] = -1.0*dwdx101;
    J[1677] = -1.0*dwdx103;
    J[1679] = -1.0*dwdx107;
    J[1696] = 1.0*dwdx48;
    J[1718] = 1.0*dwdx102;
    J[1720] = 1.0*dwdx104;
    J[1760] = -1.0*dwdx101;
    J[1761] = -1.0*dwdx103;
    J[1763] = -1.0*dwdx107;
}