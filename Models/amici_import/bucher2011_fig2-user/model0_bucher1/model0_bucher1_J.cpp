#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"
#include "dwdx.h"

void J_model0_bucher1(realtype *J, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *w, const realtype *dwdx){
    J[0] = 70.422535211267601*dwdx0;
    J[1] = 70.422535211267601*dwdx1;
    J[18] = -70.422535211267601*dwdx0;
    J[19] = -70.422535211267601*dwdx1 - 70.422535211267601*dwdx2 - 70.422535211267601*dwdx3 - 70.422535211267601*dwdx6 - 70.422535211267601*dwdx7;
    J[20] = 70.422535211267601*dwdx8;
    J[28] = -70.422535211267601*dwdx24 - 70.422535211267601*dwdx25 + 70.422535211267601*dwdx29;
    J[37] = 0.5*dwdx6;
    J[38] = -0.5*dwdx8 - 0.5*dwdx9;
    J[57] = 70.422535211267601*dwdx10;
    J[58] = 70.422535211267601*dwdx11;
    J[73] = 70.422535211267601*dwdx2;
    J[75] = -70.422535211267601*dwdx10;
    J[76] = -70.422535211267601*dwdx11 - 70.422535211267601*dwdx12 - 70.422535211267601*dwdx13;
    J[77] = 70.422535211267601*dwdx14;
    J[82] = 70.422535211267601*dwdx24;
    J[94] = 0.5*dwdx13;
    J[95] = -0.5*dwdx14 - 0.5*dwdx15;
    J[114] = 70.422535211267601*dwdx16;
    J[115] = 70.422535211267601*dwdx17;
    J[127] = 70.422535211267601*dwdx3;
    J[132] = -70.422535211267601*dwdx16;
    J[133] = -70.422535211267601*dwdx17 - 70.422535211267601*dwdx18 - 70.422535211267601*dwdx19;
    J[134] = 70.422535211267601*dwdx20;
    J[136] = 70.422535211267601*dwdx25;
    J[151] = 0.5*dwdx19;
    J[152] = -0.5*dwdx20 - 0.5*dwdx21;
    J[171] = 70.422535211267601*dwdx22;
    J[172] = 70.422535211267601*dwdx23;
    J[181] = -70.422535211267601*dwdx4 - 70.422535211267601*dwdx5 + 70.422535211267601*dwdx7;
    J[189] = -70.422535211267601*dwdx22;
    J[190] = -70.422535211267601*dwdx23 - 70.422535211267601*dwdx26 - 70.422535211267601*dwdx27 - 70.422535211267601*dwdx28 - 70.422535211267601*dwdx29;
    J[191] = 70.422535211267601*dwdx30;
    J[200] = 0.5*dwdx9;
    J[208] = 0.5*dwdx28;
    J[209] = -0.5*dwdx30;
    J[228] = 70.422535211267601*dwdx31;
    J[229] = 70.422535211267601*dwdx32;
    J[235] = 70.422535211267601*dwdx4;
    J[238] = 70.422535211267601*dwdx12;
    J[244] = 70.422535211267601*dwdx26;
    J[246] = -70.422535211267601*dwdx31;
    J[247] = -70.422535211267601*dwdx32 - 70.422535211267601*dwdx33;
    J[248] = 70.422535211267601*dwdx34;
    J[257] = 0.5*dwdx15;
    J[265] = 0.5*dwdx33;
    J[266] = -0.5*dwdx34;
    J[285] = 70.422535211267601*dwdx35;
    J[286] = 70.422535211267601*dwdx36;
    J[289] = 70.422535211267601*dwdx5;
    J[295] = 70.422535211267601*dwdx18;
    J[298] = 70.422535211267601*dwdx27;
    J[303] = -70.422535211267601*dwdx35;
    J[304] = -70.422535211267601*dwdx36 - 70.422535211267601*dwdx37;
    J[305] = 70.422535211267601*dwdx38;
    J[314] = 0.5*dwdx21;
    J[322] = 0.5*dwdx37;
    J[323] = -0.5*dwdx38;
}