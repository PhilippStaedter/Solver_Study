#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"
#include "dwdx.h"

void JB_fisher1(realtype *JB, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *xB, const realtype *w, const realtype *dwdx){
    JB[0] = -3717472118959.1074*dwdx0 - 3717472118959.1074*dwdx1 - 3717472118959.1074*dwdx2 - 3717472118959.1074*dwdx3;
    JB[1] = 8849557522123.8945*dwdx2;
    JB[2] = 11152416356877.322*dwdx1;
    JB[4] = 3717472118959.1074*dwdx1;
    JB[6] = 3717472118959.1074*dwdx0;
    JB[8] = -3717472118959.1074*dwdx0;
    JB[10] = 3717472118959.1074*dwdx3;
    JB[12] = -3717472118959.1074*dwdx3;
    JB[14] = -3717472118959.1074*dwdx6;
    JB[15] = -8849557522123.8945*dwdx4 + 8849557522123.8945*dwdx5 + 8849557522123.8945*dwdx6 - 8849557522123.8945*dwdx7;
    JB[17] = 26548672566371.684*dwdx4;
    JB[19] = 8849557522123.8945*dwdx4;
    JB[21] = -8849557522123.8945*dwdx5;
    JB[23] = 8849557522123.8945*dwdx5;
    JB[25] = 8849557522123.8945*dwdx7;
    JB[27] = -8849557522123.8945*dwdx7;
    JB[28] = -3717472118959.1074*dwdx8;
    JB[30] = 11152416356877.322*dwdx8 + 3717472118959.1074*dwdx9;
    JB[31] = -8849557522123.8945*dwdx9;
    JB[32] = 3717472118959.1074*dwdx8;
    JB[43] = -8849557522123.8945*dwdx10;
    JB[44] = 3717472118959.1074*dwdx11;
    JB[45] = 26548672566371.684*dwdx10 - 8849557522123.8945*dwdx11;
    JB[47] = 8849557522123.8945*dwdx10;
    JB[56] = -3717472118959.1074*dwdx12;
    JB[58] = 11152416356877.322*dwdx12;
    JB[60] = 3717472118959.1074*dwdx12 + 3717472118959.1074*dwdx13;
    JB[61] = -8849557522123.8945*dwdx13;
    JB[71] = -8849557522123.8945*dwdx14;
    JB[73] = 26548672566371.684*dwdx14;
    JB[74] = 3717472118959.1074*dwdx15;
    JB[75] = 8849557522123.8945*dwdx14 - 8849557522123.8945*dwdx15;
    JB[84] = -3717472118959.1074*dwdx16;
    JB[90] = 3717472118959.1074*dwdx16 - 3717472118959.1074*dwdx17 + 3717472118959.1074*dwdx18;
    JB[91] = 8849557522123.8945*dwdx17;
    JB[92] = -3717472118959.1074*dwdx16;
    JB[94] = -3717472118959.1074*dwdx18;
    JB[99] = 8849557522123.8945*dwdx19;
    JB[104] = -3717472118959.1074*dwdx21;
    JB[105] = -8849557522123.8945*dwdx19 + 8849557522123.8945*dwdx20 + 8849557522123.8945*dwdx21;
    JB[107] = 8849557522123.8945*dwdx19;
    JB[109] = -8849557522123.8945*dwdx20;
    JB[112] = -3717472118959.1074*dwdx22;
    JB[118] = 3717472118959.1074*dwdx22;
    JB[120] = -3717472118959.1074*dwdx22 - 3717472118959.1074*dwdx23 - 3717472118959.1074*dwdx24;
    JB[121] = 8849557522123.8945*dwdx24;
    JB[124] = 3717472118959.1074*dwdx23;
    JB[127] = 8849557522123.8945*dwdx26;
    JB[133] = -8849557522123.8945*dwdx26;
    JB[134] = -3717472118959.1074*dwdx27;
    JB[135] = -8849557522123.8945*dwdx25 + 8849557522123.8945*dwdx26 + 8849557522123.8945*dwdx27;
    JB[139] = 8849557522123.8945*dwdx25;
    JB[140] = -3717472118959.1074*dwdx30;
    JB[146] = 3717472118959.1074*dwdx29;
    JB[150] = 3717472118959.1074*dwdx28 - 3717472118959.1074*dwdx29 + 3717472118959.1074*dwdx30;
    JB[151] = -8849557522123.8945*dwdx28;
    JB[152] = -3717472118959.1074*dwdx30;
    JB[155] = -8849557522123.8945*dwdx33;
    JB[161] = 8849557522123.8945*dwdx32;
    JB[164] = 3717472118959.1074*dwdx31;
    JB[165] = -8849557522123.8945*dwdx31 - 8849557522123.8945*dwdx32 + 8849557522123.8945*dwdx33;
    JB[167] = -8849557522123.8945*dwdx33;
    JB[168] = -3717472118959.1074*dwdx36;
    JB[176] = -3717472118959.1074*dwdx35;
    JB[178] = 3717472118959.1074*dwdx36;
    JB[180] = 3717472118959.1074*dwdx34 + 3717472118959.1074*dwdx35 - 3717472118959.1074*dwdx36;
    JB[181] = -8849557522123.8945*dwdx34;
    JB[183] = -8849557522123.8945*dwdx39;
    JB[191] = -8849557522123.8945*dwdx37;
    JB[193] = 8849557522123.8945*dwdx39;
    JB[194] = 3717472118959.1074*dwdx38;
    JB[195] = 8849557522123.8945*dwdx37 - 8849557522123.8945*dwdx38 - 8849557522123.8945*dwdx39;
}