#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"
#include "dwdx.h"

void J_model2_liu2(realtype *J, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *w, const realtype *dwdx){
    J[0] = -1.0*dwdx0 - 1.0*dwdx1 - 1.0*dwdx2 - 1.0*dwdx3;
    J[23] = -1.0*dwdx59;
    J[24] = -1.0*dwdx62;
    J[31] = -1.0*dwdx81;
    J[32] = -1.0*dwdx84;
    J[33] = -1.0*dwdx89;
    J[34] = -1.0*dwdx91;
    J[35] = -1.0*dwdx96;
    J[36] = -1.0*dwdx102;
    J[43] = -1.0*dwdx10 - 1.0*dwdx11 - 1.0*dwdx4 - 1.0*dwdx5 - 1.0*dwdx6 - 1.0*dwdx7 - 1.0*dwdx8 - 1.0*dwdx9;
    J[62] = -1.0*dwdx54;
    J[66] = -1.0*dwdx64;
    J[67] = -1.0*dwdx67;
    J[68] = -1.0*dwdx70;
    J[74] = -1.0*dwdx86;
    J[76] = -1.0*dwdx93;
    J[77] = -1.0*dwdx98;
    J[78] = -1.0*dwdx101;
    J[85] = 1.0*dwdx10 + 1.0*dwdx11 + 1.0*dwdx4 + 1.0*dwdx5 + 1.0*dwdx6 + 1.0*dwdx7 + 1.0*dwdx8 + 1.0*dwdx9;
    J[86] = -1.0*dwdx12;
    J[92] = 1.0*dwdx28;
    J[98] = -1.0*dwdx37;
    J[99] = -1.0*dwdx39 + 1.0*dwdx43;
    J[104] = 1.0*dwdx54;
    J[108] = 1.0*dwdx64;
    J[109] = 1.0*dwdx67;
    J[110] = 1.0*dwdx70;
    J[116] = 1.0*dwdx86;
    J[118] = 1.0*dwdx93;
    J[119] = 1.0*dwdx98;
    J[120] = 1.0*dwdx101;
    J[127] = 1.0*dwdx10 + 1.0*dwdx11 + 1.0*dwdx4 + 1.0*dwdx5 + 1.0*dwdx6 + 1.0*dwdx7 + 1.0*dwdx8 + 1.0*dwdx9;
    J[146] = 1.0*dwdx54;
    J[150] = 1.0*dwdx64;
    J[151] = 1.0*dwdx67;
    J[152] = 1.0*dwdx70;
    J[158] = 1.0*dwdx86;
    J[160] = 1.0*dwdx93;
    J[161] = 1.0*dwdx98;
    J[162] = 1.0*dwdx101;
    J[172] = -1.0*dwdx13;
    J[183] = -1.0*dwdx40;
    J[214] = 1.0*dwdx13;
    J[225] = 1.0*dwdx40;
    J[256] = 1.0*dwdx13;
    J[258] = -1.0*dwdx14 - 1.0*dwdx15;
    J[267] = 1.0*dwdx40;
    J[290] = -1.0*dwdx104;
    J[301] = -1.0*dwdx16 - 1.0*dwdx17 - 1.0*dwdx18 - 1.0*dwdx19 - 1.0*dwdx20 - 1.0*dwdx21 - 1.0*dwdx22 - 1.0*dwdx23;
    J[314] = -1.0*dwdx53;
    J[318] = -1.0*dwdx63;
    J[319] = -1.0*dwdx66;
    J[320] = -1.0*dwdx69;
    J[326] = -1.0*dwdx85;
    J[328] = -1.0*dwdx92;
    J[329] = -1.0*dwdx97;
    J[330] = -1.0*dwdx100;
    J[344] = -1.0*dwdx24 - 1.0*dwdx25 - 1.0*dwdx27 - 1.0*dwdx29 - 1.0*dwdx30 - 1.0*dwdx31 - 1.0*dwdx32;
    J[345] = -1.0*dwdx33;
    J[346] = -1.0*dwdx34;
    J[347] = -1.0*dwdx35;
    J[348] = -1.0*dwdx36;
    J[350] = -1.0*dwdx38;
    J[351] = -1.0*dwdx44;
    J[352] = -1.0*dwdx46;
    J[359] = -1.0*dwdx61;
    J[367] = -1.0*dwdx83;
    J[369] = -1.0*dwdx90;
    J[375] = -1.0*dwdx106;
    J[376] = -1.0*dwdx107;
    J[386] = 1.0*dwdx27;
    J[387] = 1.0*dwdx33;
    J[392] = 1.0*dwdx38;
    J[428] = 1.0*dwdx25;
    J[430] = 1.0*dwdx34;
    J[443] = 1.0*dwdx61;
    J[470] = 1.0*dwdx24;
    J[473] = 1.0*dwdx35;
    J[493] = 1.0*dwdx83;
    J[512] = 1.0*dwdx32;
    J[516] = 1.0*dwdx36;
    J[537] = 1.0*dwdx90;
    J[553] = 1.0*dwdx16 + 1.0*dwdx17 + 1.0*dwdx18 + 1.0*dwdx19 + 1.0*dwdx20 + 1.0*dwdx21 + 1.0*dwdx22 + 1.0*dwdx23;
    J[566] = 1.0*dwdx53;
    J[570] = 1.0*dwdx63;
    J[571] = 1.0*dwdx66;
    J[572] = 1.0*dwdx69;
    J[578] = 1.0*dwdx85;
    J[580] = 1.0*dwdx92;
    J[581] = 1.0*dwdx97;
    J[582] = 1.0*dwdx100;
    J[590] = -1.0*dwdx12;
    J[595] = 1.0*dwdx16 + 1.0*dwdx17 + 1.0*dwdx18 + 1.0*dwdx19 + 1.0*dwdx20 + 1.0*dwdx21 + 1.0*dwdx22 + 1.0*dwdx23;
    J[596] = -1.0*dwdx27 + 1.0*dwdx28;
    J[597] = -1.0*dwdx33;
    J[602] = -1.0*dwdx37 - 1.0*dwdx38;
    J[603] = -1.0*dwdx39 + 1.0*dwdx43;
    J[608] = 1.0*dwdx53;
    J[612] = 1.0*dwdx63;
    J[613] = 1.0*dwdx66;
    J[614] = 1.0*dwdx69;
    J[620] = 1.0*dwdx85;
    J[622] = 1.0*dwdx92;
    J[623] = 1.0*dwdx97;
    J[624] = 1.0*dwdx100;
    J[632] = 1.0*dwdx12;
    J[638] = -1.0*dwdx26 - 1.0*dwdx28 - 1.0*dwdx29;
    J[644] = 1.0*dwdx37;
    J[645] = 1.0*dwdx39 - 1.0*dwdx41 - 1.0*dwdx42 - 1.0*dwdx43 - 1.0*dwdx44 - 1.0*dwdx45;
    J[646] = -1.0*dwdx46;
    J[669] = -1.0*dwdx105;
    J[680] = 1.0*dwdx29;
    J[687] = 1.0*dwdx44;
    J[688] = 1.0*dwdx46;
    J[731] = -1.0*dwdx47 - 1.0*dwdx48;
    J[735] = -1.0*dwdx57;
    J[737] = -1.0*dwdx58;
    J[744] = -1.0*dwdx79;
    J[745] = -1.0*dwdx80;
    J[774] = -1.0*dwdx49;
    J[777] = -1.0*dwdx55;
    J[784] = -1.0*dwdx72;
    J[817] = 1.0*dwdx50 - 1.0*dwdx51;
    J[818] = -1.0*dwdx52;
    J[825] = 1.0*dwdx71;
    J[827] = -1.0*dwdx78;
    J[835] = 1.0*dwdx103;
    J[859] = 1.0*dwdx51;
    J[860] = 1.0*dwdx52;
    J[869] = 1.0*dwdx78;
    J[899] = -1.0*dwdx48;
    J[900] = 1.0*dwdx49;
    J[903] = 1.0*dwdx55 - 1.0*dwdx56 - 1.0*dwdx57;
    J[905] = -1.0*dwdx58;
    J[908] = -1.0*dwdx68;
    J[910] = 1.0*dwdx72;
    J[911] = -1.0*dwdx74;
    J[966] = -1.0*dwdx3;
    J[974] = -1.0*dwdx25;
    J[976] = -1.0*dwdx34;
    J[983] = 1.0*dwdx48;
    J[987] = 1.0*dwdx57;
    J[989] = 1.0*dwdx58 - 1.0*dwdx59 - 1.0*dwdx60 - 1.0*dwdx61;
    J[990] = -1.0*dwdx62;
    J[991] = -1.0*dwdx65;
    J[995] = -1.0*dwdx77;
    J[1008] = 1.0*dwdx3;
    J[1031] = 1.0*dwdx59;
    J[1032] = 1.0*dwdx62;
    J[1073] = 1.0*dwdx60;
    J[1075] = 1.0*dwdx65;
    J[1079] = 1.0*dwdx77;
    J[1113] = 1.0*dwdx56;
    J[1118] = 1.0*dwdx68;
    J[1121] = 1.0*dwdx74;
    J[1153] = -1.0*dwdx50;
    J[1161] = -1.0*dwdx71;
    J[1171] = -1.0*dwdx103;
    J[1194] = -1.0*dwdx49;
    J[1197] = -1.0*dwdx55;
    J[1204] = -1.0*dwdx72 - 1.0*dwdx73;
    J[1207] = -1.0*dwdx82;
    J[1209] = -1.0*dwdx87;
    J[1237] = -1.0*dwdx51;
    J[1238] = -1.0*dwdx52;
    J[1239] = -1.0*dwdx56;
    J[1241] = -1.0*dwdx60;
    J[1243] = -1.0*dwdx65;
    J[1244] = -1.0*dwdx68;
    J[1247] = -1.0*dwdx74 - 1.0*dwdx75 - 1.0*dwdx76 - 1.0*dwdx77 - 1.0*dwdx78;
    J[1251] = -1.0*dwdx88;
    J[1252] = -1.0*dwdx94;
    J[1253] = -1.0*dwdx95;
    J[1254] = -1.0*dwdx99;
    J[1277] = -1.0*dwdx47;
    J[1290] = -1.0*dwdx79;
    J[1291] = -1.0*dwdx80;
    J[1302] = -1.0*dwdx0;
    J[1310] = -1.0*dwdx24;
    J[1313] = -1.0*dwdx35;
    J[1319] = 1.0*dwdx47;
    J[1330] = -1.0*dwdx73;
    J[1332] = 1.0*dwdx79;
    J[1333] = 1.0*dwdx80 - 1.0*dwdx81 - 1.0*dwdx82 - 1.0*dwdx83;
    J[1334] = -1.0*dwdx84;
    J[1335] = -1.0*dwdx87;
    J[1344] = 1.0*dwdx0;
    J[1375] = 1.0*dwdx81;
    J[1376] = 1.0*dwdx84;
    J[1386] = -1.0*dwdx1;
    J[1394] = -1.0*dwdx32;
    J[1398] = -1.0*dwdx36;
    J[1414] = 1.0*dwdx73;
    J[1415] = -1.0*dwdx75;
    J[1417] = 1.0*dwdx82;
    J[1419] = 1.0*dwdx87 - 1.0*dwdx88 - 1.0*dwdx89 - 1.0*dwdx90;
    J[1420] = -1.0*dwdx91;
    J[1422] = -1.0*dwdx99;
    J[1428] = 1.0*dwdx1;
    J[1457] = -1.0*dwdx76;
    J[1461] = 1.0*dwdx89;
    J[1462] = 1.0*dwdx91 - 1.0*dwdx94;
    J[1463] = -1.0*dwdx95;
    J[1470] = 1.0*dwdx2;
    J[1499] = 1.0*dwdx76;
    J[1504] = 1.0*dwdx94;
    J[1505] = 1.0*dwdx95 + 1.0*dwdx96;
    J[1506] = 1.0*dwdx102;
    J[1512] = -1.0*dwdx2;
    J[1541] = 1.0*dwdx75;
    J[1545] = 1.0*dwdx88;
    J[1547] = -1.0*dwdx96;
    J[1548] = -1.0*dwdx102 + 1.0*dwdx99;
    J[1573] = -1.0*dwdx50;
    J[1581] = -1.0*dwdx71;
    J[1591] = -1.0*dwdx103;
    J[1602] = 1.0*dwdx14;
    J[1634] = 1.0*dwdx104;
    J[1646] = -1.0*dwdx30;
    J[1653] = 1.0*dwdx41;
    J[1677] = 1.0*dwdx105 - 1.0*dwdx106;
    J[1678] = -1.0*dwdx107;
    J[1688] = 1.0*dwdx30;
    J[1719] = 1.0*dwdx106;
    J[1720] = 1.0*dwdx107;
    J[1730] = 1.0*dwdx26;
    J[1737] = 1.0*dwdx42;
}