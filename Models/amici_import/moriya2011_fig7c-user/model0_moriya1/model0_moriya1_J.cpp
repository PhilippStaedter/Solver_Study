#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"
#include "dwdx.h"

void J_model0_moriya1(realtype *J, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *w, const realtype *dwdx){
    J[50] = -1.0*dwdx0 - 1.0*dwdx1 - 1.0*dwdx2 + 1.0*dwdx3;
    J[54] = 1.0*dwdx14;
    J[55] = 1.0*dwdx19;
    J[58] = -1.0*dwdx22;
    J[59] = -1.0*dwdx29;
    J[65] = -1.0*dwdx44;
    J[67] = -1.0*dwdx63 + 1.0*dwdx70;
    J[69] = -1.0*dwdx72;
    J[73] = -1.0*dwdx84;
    J[76] = 1.0*dwdx108;
    J[79] = -1.0*dwdx111;
    J[84] = 1.0*dwdx121;
    J[87] = -1.0*dwdx126;
    J[100] = 1.0*dwdx4 - 1.0*dwdx5 - 1.0*dwdx6 - 1.0*dwdx7;
    J[101] = 1.0*dwdx10;
    J[104] = 1.0*dwdx16;
    J[108] = -1.0*dwdx30;
    J[114] = 1.0*dwdx47 - 1.0*dwdx49;
    J[116] = -1.0*dwdx66;
    J[118] = 1.0*dwdx76 - 1.0*dwdx78;
    J[122] = 1.0*dwdx88 + 1.0*dwdx89 - 1.0*dwdx92;
    J[125] = -1.0*dwdx109;
    J[128] = -1.0*dwdx114;
    J[136] = 1.0*dwdx128;
    J[137] = 1.0*dwdx133;
    J[142] = 1.0*dwdx138;
    J[149] = 1.0*dwdx7;
    J[150] = -1.0*dwdx10 - 1.0*dwdx11 + 1.0*dwdx8 - 1.0*dwdx9;
    J[153] = 1.0*dwdx17;
    J[157] = -1.0*dwdx31;
    J[163] = -1.0*dwdx47 - 1.0*dwdx48;
    J[165] = -1.0*dwdx65;
    J[167] = 1.0*dwdx75 - 1.0*dwdx76 - 1.0*dwdx77;
    J[171] = -1.0*dwdx89 - 1.0*dwdx91;
    J[174] = 1.0*dwdx109;
    J[177] = -1.0*dwdx113;
    J[185] = -1.0*dwdx128;
    J[186] = -1.0*dwdx133;
    J[191] = -1.0*dwdx138;
    J[246] = 1.0*dwdx2;
    J[250] = -1.0*dwdx12 - 1.0*dwdx13 - 1.0*dwdx14 + 1.0*dwdx15;
    J[251] = 1.0*dwdx18;
    J[254] = -1.0*dwdx21;
    J[255] = -1.0*dwdx28;
    J[261] = -1.0*dwdx45 + 1.0*dwdx58;
    J[263] = -1.0*dwdx64;
    J[265] = -1.0*dwdx73;
    J[269] = -1.0*dwdx85;
    J[272] = -1.0*dwdx108;
    J[275] = -1.0*dwdx112;
    J[280] = -1.0*dwdx121;
    J[283] = 1.0*dwdx126;
    J[295] = 1.0*dwdx1 - 1.0*dwdx3;
    J[296] = -1.0*dwdx4 + 1.0*dwdx5;
    J[297] = -1.0*dwdx8 + 1.0*dwdx9;
    J[299] = 1.0*dwdx12 - 1.0*dwdx15;
    J[300] = -1.0*dwdx16 - 1.0*dwdx17 - 1.0*dwdx18 - 1.0*dwdx19 - 1.0*dwdx20;
    J[303] = 1.0*dwdx21 + 1.0*dwdx22;
    J[304] = 1.0*dwdx28 + 1.0*dwdx29 + 1.0*dwdx30 + 1.0*dwdx31;
    J[310] = -1.0*dwdx58 - 1.0*dwdx60;
    J[312] = -1.0*dwdx70 - 1.0*dwdx71;
    J[314] = -1.0*dwdx75 - 1.0*dwdx82;
    J[318] = -1.0*dwdx88 - 1.0*dwdx98;
    J[324] = -1.0*dwdx118;
    J[450] = 1.0*dwdx23 - 1.0*dwdx25;
    J[451] = 1.0*dwdx33;
    J[457] = -1.0*dwdx51;
    J[465] = -1.0*dwdx95;
    J[471] = -1.0*dwdx116;
    J[500] = 1.0*dwdx39 - 1.0*dwdx40;
    J[502] = 1.0*dwdx43;
    J[600] = 1.0*dwdx41 - 1.0*dwdx42;
    J[604] = 1.0*dwdx57;
    J[618] = 1.0*dwdx117;
    J[789] = 1.0*dwdx13 - 1.0*dwdx15;
    J[790] = -1.0*dwdx18;
    J[793] = -1.0*dwdx27;
    J[794] = -1.0*dwdx38;
    J[800] = 1.0*dwdx45 - 1.0*dwdx53 - 1.0*dwdx58 - 1.0*dwdx59;
    J[802] = 1.0*dwdx64 + 1.0*dwdx69;
    J[804] = 1.0*dwdx73;
    J[808] = 1.0*dwdx85;
    J[811] = -1.0*dwdx110;
    J[814] = 1.0*dwdx112;
    J[819] = -1.0*dwdx122;
    J[822] = 1.0*dwdx131;
    J[883] = 1.0*dwdx0 - 1.0*dwdx3;
    J[888] = -1.0*dwdx19;
    J[891] = -1.0*dwdx26;
    J[892] = -1.0*dwdx37;
    J[898] = 1.0*dwdx44 + 1.0*dwdx59;
    J[900] = 1.0*dwdx63 - 1.0*dwdx68 - 1.0*dwdx69 - 1.0*dwdx70;
    J[902] = 1.0*dwdx72;
    J[906] = 1.0*dwdx84;
    J[909] = 1.0*dwdx110;
    J[912] = 1.0*dwdx111;
    J[917] = 1.0*dwdx122;
    J[920] = -1.0*dwdx131;
    J[983] = 1.0*dwdx11 - 1.0*dwdx8;
    J[986] = -1.0*dwdx17;
    J[990] = -1.0*dwdx34;
    J[996] = -1.0*dwdx46 + 1.0*dwdx48;
    J[998] = 1.0*dwdx65;
    J[1000] = -1.0*dwdx74 - 1.0*dwdx75 + 1.0*dwdx77 - 1.0*dwdx79;
    J[1004] = 1.0*dwdx86 - 1.0*dwdx87 + 1.0*dwdx91;
    J[1007] = 1.0*dwdx106;
    J[1010] = 1.0*dwdx113;
    J[1018] = -1.0*dwdx127;
    J[1019] = -1.0*dwdx132;
    J[1024] = -1.0*dwdx137;
    J[1178] = -1.0*dwdx4 + 1.0*dwdx6;
    J[1182] = -1.0*dwdx16;
    J[1186] = -1.0*dwdx32;
    J[1192] = 1.0*dwdx46 + 1.0*dwdx49;
    J[1194] = 1.0*dwdx66;
    J[1196] = 1.0*dwdx74 + 1.0*dwdx78;
    J[1200] = -1.0*dwdx86 + 1.0*dwdx87 - 1.0*dwdx88 - 1.0*dwdx90 + 1.0*dwdx92;
    J[1202] = 1.0*dwdx101;
    J[1203] = -1.0*dwdx106;
    J[1206] = 1.0*dwdx114;
    J[1214] = 1.0*dwdx127;
    J[1215] = 1.0*dwdx132;
    J[1220] = 1.0*dwdx137;
    J[1298] = -1.0*dwdx93;
    J[1300] = -1.0*dwdx102 + 1.0*dwdx103;
    J[1339] = -1.0*dwdx50;
    J[1341] = -1.0*dwdx67;
    J[1347] = -1.0*dwdx94;
    J[1349] = 1.0*dwdx104;
    J[1350] = -1.0*dwdx107;
    J[1479] = -1.0*dwdx24;
    J[1480] = -1.0*dwdx35;
    J[1500] = -1.0*dwdx115;
    J[1731] = -1.0*dwdx52;
    J[1750] = 1.0*dwdx119 - 1.0*dwdx120;
    J[1751] = 1.0*dwdx123;
    J[1774] = 1.0*dwdx36;
    J[1800] = -1.0*dwdx125;
    J[1878] = 1.0*dwdx54 - 1.0*dwdx55;
    J[1882] = -1.0*dwdx80;
    J[1886] = -1.0*dwdx96;
    J[1898] = -1.0*dwdx124;
    J[1900] = 1.0*dwdx129 - 1.0*dwdx130;
    J[1901] = -1.0*dwdx134;
    J[1906] = -1.0*dwdx139;
    J[1927] = -1.0*dwdx56;
    J[1931] = -1.0*dwdx81;
    J[1935] = -1.0*dwdx97;
    J[1937] = 1.0*dwdx105;
    J[1950] = -1.0*dwdx135;
    J[2172] = 1.0*dwdx61;
    J[2176] = 1.0*dwdx83;
    J[2180] = 1.0*dwdx99;
    J[2195] = 1.0*dwdx136;
    J[2200] = 1.0*dwdx140 - 1.0*dwdx141;
    J[2201] = 1.0*dwdx142;
    J[2221] = -1.0*dwdx62;
    J[2229] = -1.0*dwdx100;
    J[2249] = 1.0*dwdx141;
    J[2250] = -1.0*dwdx143;
}