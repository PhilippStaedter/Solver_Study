#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"
#include "dwdx.h"

void J_model0_zi1(realtype *J, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *w, const realtype *dwdx){
    J[0] = -952.38095238095241*dwdx0 - 952.38095238095241*dwdx1;
    J[2] = 952.38095238095241*dwdx5;
    J[8] = -952.38095238095241*dwdx15;
    J[17] = -952.38095238095241*dwdx2 - 952.38095238095241*dwdx3;
    J[18] = 952.38095238095241*dwdx6;
    J[34] = -952.38095238095241*dwdx5 - 952.38095238095241*dwdx6;
    J[43] = 952.38095238095241*dwdx19;
    J[46] = 952.38095238095241*dwdx27;
    J[47] = 952.38095238095241*dwdx28;
    J[49] = -952.38095238095241*dwdx4;
    J[51] = -952.38095238095241*dwdx7 - 952.38095238095241*dwdx8;
    J[52] = 952.38095238095241*dwdx9;
    J[53] = -952.38095238095241*dwdx10;
    J[67] = 2857.1428571428573*dwdx7;
    J[68] = -2857.1428571428573*dwdx9;
    J[72] = 2857.1428571428573*dwdx14;
    J[81] = -952.38095238095241*dwdx4;
    J[83] = -952.38095238095241*dwdx8;
    J[85] = -952.38095238095241*dwdx10 - 952.38095238095241*dwdx11;
    J[86] = 952.38095238095241*dwdx12;
    J[101] = 2857.1428571428573*dwdx11;
    J[102] = -2857.1428571428573*dwdx12;
    J[104] = 2857.1428571428573*dwdx14;
    J[113] = 952.38095238095241*dwdx4;
    J[115] = 952.38095238095241*dwdx8;
    J[117] = 952.38095238095241*dwdx10;
    J[119] = -952.38095238095241*dwdx13;
    J[135] = 2857.1428571428573*dwdx13;
    J[136] = -2857.1428571428573*dwdx14;
    J[153] = -952.38095238095241*dwdx16;
    J[155] = 952.38095238095241*dwdx20;
    J[170] = -952.38095238095241*dwdx17 - 952.38095238095241*dwdx18;
    J[171] = 952.38095238095241*dwdx21;
    J[176] = 952.38095238095241*dwdx0;
    J[177] = 952.38095238095241*dwdx2;
    J[185] = 952.38095238095241*dwdx16;
    J[186] = 952.38095238095241*dwdx18;
    J[187] = -952.38095238095241*dwdx19 - 952.38095238095241*dwdx20 - 952.38095238095241*dwdx21;
    J[190] = -952.38095238095241*dwdx27;
    J[191] = -952.38095238095241*dwdx28;
    J[204] = -952.38095238095241*dwdx22;
    J[206] = 952.38095238095241*dwdx25;
    J[221] = -952.38095238095241*dwdx23 - 952.38095238095241*dwdx24;
    J[222] = 952.38095238095241*dwdx26;
    J[224] = 952.38095238095241*dwdx0;
    J[225] = 952.38095238095241*dwdx2;
    J[235] = -952.38095238095241*dwdx19;
    J[236] = 952.38095238095241*dwdx22;
    J[237] = 952.38095238095241*dwdx23;
    J[238] = -952.38095238095241*dwdx25 - 952.38095238095241*dwdx26 - 952.38095238095241*dwdx27;
    J[239] = -952.38095238095241*dwdx28;
    J[240] = 1.0*dwdx0;
    J[241] = 1.0*dwdx2;
    J[251] = -1.0*dwdx19;
    J[253] = 1.0*dwdx23;
    J[254] = -1.0*dwdx27;
    J[255] = -1.0*dwdx28;
}