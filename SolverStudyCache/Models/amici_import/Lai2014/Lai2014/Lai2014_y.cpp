#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"

void y_Lai2014(realtype *y, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *w){
    y[0] = cam_RR_0_0;
    y[1] = cam_RR_0_rbp;
    y[2] = cam_RR_0_tbp;
    y[3] = cam_RR_A_0;
    y[4] = cam_RR_A_rbp;
    y[5] = cam_RR_A_tbp;
    y[6] = cam_RR_B_0;
    y[7] = cam_RR_B_rbp;
    y[8] = cam_RR_B_tbp;
    y[9] = cam_RR_C_0;
    y[10] = cam_RR_C_rbp;
    y[11] = cam_RR_C_tbp;
    y[12] = cam_RR_D_0;
    y[13] = cam_RR_D_rbp;
    y[14] = cam_RR_D_tbp;
    y[15] = cam_RR_AB_0;
    y[16] = cam_RR_AB_rbp;
    y[17] = cam_RR_AB_tbp;
    y[18] = cam_RR_AC_0;
    y[19] = cam_RR_AC_rbp;
    y[20] = cam_RR_AC_tbp;
    y[21] = cam_RR_AD_0;
    y[22] = cam_RR_AD_rbp;
    y[23] = cam_RR_AD_tbp;
    y[24] = cam_RR_BC_0;
    y[25] = cam_RR_BC_rbp;
    y[26] = cam_RR_BC_tbp;
    y[27] = cam_RR_BD_0;
    y[28] = cam_RR_BD_rbp;
    y[29] = cam_RR_BD_tbp;
    y[30] = cam_RR_CD_0;
    y[31] = cam_RR_CD_rbp;
    y[32] = cam_RR_CD_tbp;
    y[33] = cam_RR_ABC_0;
    y[34] = cam_RR_ABC_rbp;
    y[35] = cam_RR_ABC_tbp;
    y[36] = cam_RR_ABD_0;
    y[37] = cam_RR_ABD_rbp;
    y[38] = cam_RR_ABD_tbp;
    y[39] = cam_RR_ACD_0;
    y[40] = cam_RR_ACD_rbp;
    y[41] = cam_RR_ACD_tbp;
    y[42] = cam_RR_BCD_0;
    y[43] = cam_RR_BCD_rbp;
    y[44] = cam_RR_BCD_tbp;
    y[45] = cam_RR_ABCD_0;
    y[46] = cam_RR_ABCD_rbp;
    y[47] = cam_RR_ABCD_tbp;
    y[48] = cam_RT_0_0;
    y[49] = cam_RT_0_rbp;
    y[50] = cam_RT_0_tbp;
    y[51] = cam_RT_A_0;
    y[52] = cam_RT_A_rbp;
    y[53] = cam_RT_A_tbp;
    y[54] = cam_RT_B_0;
    y[55] = cam_RT_B_rbp;
    y[56] = cam_RT_B_tbp;
    y[57] = cam_RT_C_0;
    y[58] = cam_RT_C_rbp;
    y[59] = cam_RT_C_tbp;
    y[60] = cam_RT_D_0;
    y[61] = cam_RT_D_rbp;
    y[62] = cam_RT_D_tbp;
    y[63] = cam_RT_AB_0;
    y[64] = cam_RT_AB_rbp;
    y[65] = cam_RT_AB_tbp;
    y[66] = cam_RT_AC_0;
    y[67] = cam_RT_AC_rbp;
    y[68] = cam_RT_AC_tbp;
    y[69] = cam_RT_AD_0;
    y[70] = cam_RT_AD_rbp;
    y[71] = cam_RT_AD_tbp;
    y[72] = cam_RT_BC_0;
    y[73] = cam_RT_BC_rbp;
    y[74] = cam_RT_BC_tbp;
    y[75] = cam_RT_BD_0;
    y[76] = cam_RT_BD_rbp;
    y[77] = cam_RT_BD_tbp;
    y[78] = cam_RT_CD_0;
    y[79] = cam_RT_CD_rbp;
    y[80] = cam_RT_CD_tbp;
    y[81] = cam_RT_ABC_0;
    y[82] = cam_RT_ABC_rbp;
    y[83] = cam_RT_ABC_tbp;
    y[84] = cam_RT_ABD_0;
    y[85] = cam_RT_ABD_rbp;
    y[86] = cam_RT_ABD_tbp;
    y[87] = cam_RT_ACD_0;
    y[88] = cam_RT_ACD_rbp;
    y[89] = cam_RT_ACD_tbp;
    y[90] = cam_RT_BCD_0;
    y[91] = cam_RT_BCD_rbp;
    y[92] = cam_RT_BCD_tbp;
    y[93] = cam_RT_ABCD_0;
    y[94] = cam_RT_ABCD_rbp;
    y[95] = cam_RT_ABCD_tbp;
    y[96] = cam_TR_0_0;
    y[97] = cam_TR_0_rbp;
    y[98] = cam_TR_0_tbp;
    y[99] = cam_TR_A_0;
    y[100] = cam_TR_A_rbp;
    y[101] = cam_TR_A_tbp;
    y[102] = cam_TR_B_0;
    y[103] = cam_TR_B_rbp;
    y[104] = cam_TR_B_tbp;
    y[105] = cam_TR_C_0;
    y[106] = cam_TR_C_rbp;
    y[107] = cam_TR_C_tbp;
    y[108] = cam_TR_D_0;
    y[109] = cam_TR_D_rbp;
    y[110] = cam_TR_D_tbp;
    y[111] = cam_TR_AB_0;
    y[112] = cam_TR_AB_rbp;
    y[113] = cam_TR_AB_tbp;
    y[114] = cam_TR_AC_0;
    y[115] = cam_TR_AC_rbp;
    y[116] = cam_TR_AC_tbp;
    y[117] = cam_TR_AD_0;
    y[118] = cam_TR_AD_rbp;
    y[119] = cam_TR_AD_tbp;
    y[120] = cam_TR_BC_0;
    y[121] = cam_TR_BC_rbp;
    y[122] = cam_TR_BC_tbp;
    y[123] = cam_TR_BD_0;
    y[124] = cam_TR_BD_rbp;
    y[125] = cam_TR_BD_tbp;
    y[126] = cam_TR_CD_0;
    y[127] = cam_TR_CD_rbp;
    y[128] = cam_TR_CD_tbp;
    y[129] = cam_TR_ABC_0;
    y[130] = cam_TR_ABC_rbp;
    y[131] = cam_TR_ABC_tbp;
    y[132] = cam_TR_ABD_0;
    y[133] = cam_TR_ABD_rbp;
    y[134] = cam_TR_ABD_tbp;
    y[135] = cam_TR_ACD_0;
    y[136] = cam_TR_ACD_rbp;
    y[137] = cam_TR_ACD_tbp;
    y[138] = cam_TR_BCD_0;
    y[139] = cam_TR_BCD_rbp;
    y[140] = cam_TR_BCD_tbp;
    y[141] = cam_TR_ABCD_0;
    y[142] = cam_TR_ABCD_rbp;
    y[143] = cam_TR_ABCD_tbp;
    y[144] = cam_TT_0_0;
    y[145] = cam_TT_0_rbp;
    y[146] = cam_TT_0_tbp;
    y[147] = cam_TT_A_0;
    y[148] = cam_TT_A_rbp;
    y[149] = cam_TT_A_tbp;
    y[150] = cam_TT_B_0;
    y[151] = cam_TT_B_rbp;
    y[152] = cam_TT_B_tbp;
    y[153] = cam_TT_C_0;
    y[154] = cam_TT_C_rbp;
    y[155] = cam_TT_C_tbp;
    y[156] = cam_TT_D_0;
    y[157] = cam_TT_D_rbp;
    y[158] = cam_TT_D_tbp;
    y[159] = cam_TT_AB_0;
    y[160] = cam_TT_AB_rbp;
    y[161] = cam_TT_AB_tbp;
    y[162] = cam_TT_AC_0;
    y[163] = cam_TT_AC_rbp;
    y[164] = cam_TT_AC_tbp;
    y[165] = cam_TT_AD_0;
    y[166] = cam_TT_AD_rbp;
    y[167] = cam_TT_AD_tbp;
    y[168] = cam_TT_BC_0;
    y[169] = cam_TT_BC_rbp;
    y[170] = cam_TT_BC_tbp;
    y[171] = cam_TT_BD_0;
    y[172] = cam_TT_BD_rbp;
    y[173] = cam_TT_BD_tbp;
    y[174] = cam_TT_CD_0;
    y[175] = cam_TT_CD_rbp;
    y[176] = cam_TT_CD_tbp;
    y[177] = cam_TT_ABC_0;
    y[178] = cam_TT_ABC_rbp;
    y[179] = cam_TT_ABC_tbp;
    y[180] = cam_TT_ABD_0;
    y[181] = cam_TT_ABD_rbp;
    y[182] = cam_TT_ABD_tbp;
    y[183] = cam_TT_ACD_0;
    y[184] = cam_TT_ACD_rbp;
    y[185] = cam_TT_ACD_tbp;
    y[186] = cam_TT_BCD_0;
    y[187] = cam_TT_BCD_rbp;
    y[188] = cam_TT_BCD_tbp;
    y[189] = cam_TT_ABCD_0;
    y[190] = cam_TT_ABCD_rbp;
    y[191] = cam_TT_ABCD_tbp;
    y[192] = ca;
    y[193] = rbp;
    y[194] = tbp;
}