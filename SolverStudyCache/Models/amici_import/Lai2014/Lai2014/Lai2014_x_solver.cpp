#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "x_rdata.h"

void x_solver_Lai2014(realtype *x_solver, const realtype *x_rdata){
    x_solver[0] = cam_RR_0_0;
    x_solver[1] = cam_RR_0_rbp;
    x_solver[2] = cam_RR_0_tbp;
    x_solver[3] = cam_RR_A_0;
    x_solver[4] = cam_RR_A_rbp;
    x_solver[5] = cam_RR_A_tbp;
    x_solver[6] = cam_RR_B_0;
    x_solver[7] = cam_RR_B_rbp;
    x_solver[8] = cam_RR_B_tbp;
    x_solver[9] = cam_RR_C_0;
    x_solver[10] = cam_RR_C_rbp;
    x_solver[11] = cam_RR_C_tbp;
    x_solver[12] = cam_RR_D_0;
    x_solver[13] = cam_RR_D_rbp;
    x_solver[14] = cam_RR_D_tbp;
    x_solver[15] = cam_RR_AB_0;
    x_solver[16] = cam_RR_AB_rbp;
    x_solver[17] = cam_RR_AB_tbp;
    x_solver[18] = cam_RR_AC_0;
    x_solver[19] = cam_RR_AC_rbp;
    x_solver[20] = cam_RR_AC_tbp;
    x_solver[21] = cam_RR_AD_0;
    x_solver[22] = cam_RR_AD_rbp;
    x_solver[23] = cam_RR_AD_tbp;
    x_solver[24] = cam_RR_BC_0;
    x_solver[25] = cam_RR_BC_rbp;
    x_solver[26] = cam_RR_BC_tbp;
    x_solver[27] = cam_RR_BD_0;
    x_solver[28] = cam_RR_BD_rbp;
    x_solver[29] = cam_RR_BD_tbp;
    x_solver[30] = cam_RR_CD_0;
    x_solver[31] = cam_RR_CD_rbp;
    x_solver[32] = cam_RR_CD_tbp;
    x_solver[33] = cam_RR_ABC_0;
    x_solver[34] = cam_RR_ABC_rbp;
    x_solver[35] = cam_RR_ABC_tbp;
    x_solver[36] = cam_RR_ABD_0;
    x_solver[37] = cam_RR_ABD_rbp;
    x_solver[38] = cam_RR_ABD_tbp;
    x_solver[39] = cam_RR_ACD_0;
    x_solver[40] = cam_RR_ACD_rbp;
    x_solver[41] = cam_RR_ACD_tbp;
    x_solver[42] = cam_RR_BCD_0;
    x_solver[43] = cam_RR_BCD_rbp;
    x_solver[44] = cam_RR_BCD_tbp;
    x_solver[45] = cam_RR_ABCD_0;
    x_solver[46] = cam_RR_ABCD_rbp;
    x_solver[47] = cam_RR_ABCD_tbp;
    x_solver[48] = cam_RT_0_0;
    x_solver[49] = cam_RT_0_rbp;
    x_solver[50] = cam_RT_0_tbp;
    x_solver[51] = cam_RT_A_0;
    x_solver[52] = cam_RT_A_rbp;
    x_solver[53] = cam_RT_A_tbp;
    x_solver[54] = cam_RT_B_0;
    x_solver[55] = cam_RT_B_rbp;
    x_solver[56] = cam_RT_B_tbp;
    x_solver[57] = cam_RT_C_0;
    x_solver[58] = cam_RT_C_rbp;
    x_solver[59] = cam_RT_C_tbp;
    x_solver[60] = cam_RT_D_0;
    x_solver[61] = cam_RT_D_rbp;
    x_solver[62] = cam_RT_D_tbp;
    x_solver[63] = cam_RT_AB_0;
    x_solver[64] = cam_RT_AB_rbp;
    x_solver[65] = cam_RT_AB_tbp;
    x_solver[66] = cam_RT_AC_0;
    x_solver[67] = cam_RT_AC_rbp;
    x_solver[68] = cam_RT_AC_tbp;
    x_solver[69] = cam_RT_AD_0;
    x_solver[70] = cam_RT_AD_rbp;
    x_solver[71] = cam_RT_AD_tbp;
    x_solver[72] = cam_RT_BC_0;
    x_solver[73] = cam_RT_BC_rbp;
    x_solver[74] = cam_RT_BC_tbp;
    x_solver[75] = cam_RT_BD_0;
    x_solver[76] = cam_RT_BD_rbp;
    x_solver[77] = cam_RT_BD_tbp;
    x_solver[78] = cam_RT_CD_0;
    x_solver[79] = cam_RT_CD_rbp;
    x_solver[80] = cam_RT_CD_tbp;
    x_solver[81] = cam_RT_ABC_0;
    x_solver[82] = cam_RT_ABC_rbp;
    x_solver[83] = cam_RT_ABC_tbp;
    x_solver[84] = cam_RT_ABD_0;
    x_solver[85] = cam_RT_ABD_rbp;
    x_solver[86] = cam_RT_ABD_tbp;
    x_solver[87] = cam_RT_ACD_0;
    x_solver[88] = cam_RT_ACD_rbp;
    x_solver[89] = cam_RT_ACD_tbp;
    x_solver[90] = cam_RT_BCD_0;
    x_solver[91] = cam_RT_BCD_rbp;
    x_solver[92] = cam_RT_BCD_tbp;
    x_solver[93] = cam_RT_ABCD_0;
    x_solver[94] = cam_RT_ABCD_rbp;
    x_solver[95] = cam_RT_ABCD_tbp;
    x_solver[96] = cam_TR_0_0;
    x_solver[97] = cam_TR_0_rbp;
    x_solver[98] = cam_TR_0_tbp;
    x_solver[99] = cam_TR_A_0;
    x_solver[100] = cam_TR_A_rbp;
    x_solver[101] = cam_TR_A_tbp;
    x_solver[102] = cam_TR_B_0;
    x_solver[103] = cam_TR_B_rbp;
    x_solver[104] = cam_TR_B_tbp;
    x_solver[105] = cam_TR_C_0;
    x_solver[106] = cam_TR_C_rbp;
    x_solver[107] = cam_TR_C_tbp;
    x_solver[108] = cam_TR_D_0;
    x_solver[109] = cam_TR_D_rbp;
    x_solver[110] = cam_TR_D_tbp;
    x_solver[111] = cam_TR_AB_0;
    x_solver[112] = cam_TR_AB_rbp;
    x_solver[113] = cam_TR_AB_tbp;
    x_solver[114] = cam_TR_AC_0;
    x_solver[115] = cam_TR_AC_rbp;
    x_solver[116] = cam_TR_AC_tbp;
    x_solver[117] = cam_TR_AD_0;
    x_solver[118] = cam_TR_AD_rbp;
    x_solver[119] = cam_TR_AD_tbp;
    x_solver[120] = cam_TR_BC_0;
    x_solver[121] = cam_TR_BC_rbp;
    x_solver[122] = cam_TR_BC_tbp;
    x_solver[123] = cam_TR_BD_0;
    x_solver[124] = cam_TR_BD_rbp;
    x_solver[125] = cam_TR_BD_tbp;
    x_solver[126] = cam_TR_CD_0;
    x_solver[127] = cam_TR_CD_rbp;
    x_solver[128] = cam_TR_CD_tbp;
    x_solver[129] = cam_TR_ABC_0;
    x_solver[130] = cam_TR_ABC_rbp;
    x_solver[131] = cam_TR_ABC_tbp;
    x_solver[132] = cam_TR_ABD_0;
    x_solver[133] = cam_TR_ABD_rbp;
    x_solver[134] = cam_TR_ABD_tbp;
    x_solver[135] = cam_TR_ACD_0;
    x_solver[136] = cam_TR_ACD_rbp;
    x_solver[137] = cam_TR_ACD_tbp;
    x_solver[138] = cam_TR_BCD_0;
    x_solver[139] = cam_TR_BCD_rbp;
    x_solver[140] = cam_TR_BCD_tbp;
    x_solver[141] = cam_TR_ABCD_0;
    x_solver[142] = cam_TR_ABCD_rbp;
    x_solver[143] = cam_TR_ABCD_tbp;
    x_solver[144] = cam_TT_0_0;
    x_solver[145] = cam_TT_0_rbp;
    x_solver[146] = cam_TT_0_tbp;
    x_solver[147] = cam_TT_A_0;
    x_solver[148] = cam_TT_A_rbp;
    x_solver[149] = cam_TT_A_tbp;
    x_solver[150] = cam_TT_B_0;
    x_solver[151] = cam_TT_B_rbp;
    x_solver[152] = cam_TT_B_tbp;
    x_solver[153] = cam_TT_C_0;
    x_solver[154] = cam_TT_C_rbp;
    x_solver[155] = cam_TT_C_tbp;
    x_solver[156] = cam_TT_D_0;
    x_solver[157] = cam_TT_D_rbp;
    x_solver[158] = cam_TT_D_tbp;
    x_solver[159] = cam_TT_AB_0;
    x_solver[160] = cam_TT_AB_rbp;
    x_solver[161] = cam_TT_AB_tbp;
    x_solver[162] = cam_TT_AC_0;
    x_solver[163] = cam_TT_AC_rbp;
    x_solver[164] = cam_TT_AC_tbp;
    x_solver[165] = cam_TT_AD_0;
    x_solver[166] = cam_TT_AD_rbp;
    x_solver[167] = cam_TT_AD_tbp;
    x_solver[168] = cam_TT_BC_0;
    x_solver[169] = cam_TT_BC_rbp;
    x_solver[170] = cam_TT_BC_tbp;
    x_solver[171] = cam_TT_BD_0;
    x_solver[172] = cam_TT_BD_rbp;
    x_solver[173] = cam_TT_BD_tbp;
    x_solver[174] = cam_TT_CD_0;
    x_solver[175] = cam_TT_CD_rbp;
    x_solver[176] = cam_TT_CD_tbp;
    x_solver[177] = cam_TT_ABC_0;
    x_solver[178] = cam_TT_ABC_rbp;
    x_solver[179] = cam_TT_ABC_tbp;
    x_solver[180] = cam_TT_ABD_0;
    x_solver[181] = cam_TT_ABD_rbp;
    x_solver[182] = cam_TT_ABD_tbp;
    x_solver[183] = cam_TT_ACD_0;
    x_solver[184] = cam_TT_ACD_rbp;
    x_solver[185] = cam_TT_ACD_tbp;
    x_solver[186] = cam_TT_BCD_0;
    x_solver[187] = cam_TT_BCD_rbp;
    x_solver[188] = cam_TT_BCD_tbp;
    x_solver[189] = cam_TT_ABCD_0;
    x_solver[190] = cam_TT_ABCD_rbp;
    x_solver[191] = cam_TT_ABCD_tbp;
    x_solver[192] = ca;
    x_solver[193] = rbp;
    x_solver[194] = tbp;
}