#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"
#include "dwdx.h"

void J_model0_hockin2(realtype *J, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *w, const realtype *dwdx){
    J[0] = -1.0*dwdx0 - 1.0*dwdx1 - 1.0*dwdx2 - 1.0*dwdx3 - 1.0*dwdx4 - 1.0*dwdx5 - 1.0*dwdx6 - 1.0*dwdx7 - 1.0*dwdx8;
    J[8] = -1.0*dwdx23;
    J[9] = -1.0*dwdx24;
    J[10] = -1.0*dwdx25;
    J[11] = -1.0*dwdx28;
    J[12] = -1.0*dwdx32;
    J[13] = -1.0*dwdx35;
    J[14] = -1.0*dwdx38;
    J[15] = -1.0*dwdx41;
    J[16] = -1.0*dwdx44;
    J[17] = -1.0*dwdx47;
    J[18] = -1.0*dwdx49;
    J[19] = -1.0*dwdx52;
    J[20] = -1.0*dwdx54;
    J[21] = -1.0*dwdx56;
    J[22] = -1.0*dwdx58;
    J[27] = -1.0*dwdx72;
    J[28] = -1.0*dwdx77;
    J[29] = -1.0*dwdx78;
    J[31] = 1.0*dwdx9;
    J[38] = 1.0*dwdx16;
    J[40] = 1.0*dwdx26;
    J[62] = 1.0*dwdx10;
    J[68] = 1.0*dwdx18;
    J[71] = 1.0*dwdx27;
    J[93] = 1.0*dwdx11;
    J[98] = 1.0*dwdx21;
    J[102] = 1.0*dwdx30;
    J[124] = 1.0*dwdx12;
    J[128] = 1.0*dwdx17;
    J[135] = 1.0*dwdx40;
    J[155] = 1.0*dwdx13;
    J[158] = 1.0*dwdx20;
    J[166] = 1.0*dwdx42;
    J[186] = 1.0*dwdx14;
    J[188] = 1.0*dwdx22;
    J[197] = 1.0*dwdx45;
    J[217] = 1.0*dwdx15;
    J[218] = 1.0*dwdx19;
    J[230] = 1.0*dwdx53;
    J[240] = -1.0*dwdx2;
    J[241] = 1.0*dwdx9;
    J[242] = 1.0*dwdx10;
    J[243] = 1.0*dwdx11;
    J[244] = 1.0*dwdx12;
    J[245] = 1.0*dwdx13;
    J[246] = 1.0*dwdx14;
    J[247] = 1.0*dwdx15;
    J[248] = 1.0*dwdx16 + 1.0*dwdx17 + 1.0*dwdx18 + 1.0*dwdx19 + 1.0*dwdx20 + 1.0*dwdx21 + 1.0*dwdx22 - 1.0*dwdx23;
    J[249] = -1.0*dwdx24;
    J[250] = 1.0*dwdx26;
    J[251] = 1.0*dwdx27;
    J[252] = 1.0*dwdx30;
    J[255] = 1.0*dwdx40;
    J[256] = 1.0*dwdx42;
    J[257] = 1.0*dwdx45;
    J[260] = 1.0*dwdx53;
    J[270] = 1.0*dwdx2;
    J[278] = 1.0*dwdx23;
    J[279] = 1.0*dwdx24;
    J[300] = -1.0*dwdx0;
    J[301] = -1.0*dwdx9;
    J[308] = -1.0*dwdx16;
    J[310] = -1.0*dwdx25 - 1.0*dwdx26;
    J[329] = -1.0*dwdx78;
    J[330] = -1.0*dwdx1;
    J[332] = -1.0*dwdx10;
    J[338] = -1.0*dwdx18;
    J[341] = -1.0*dwdx27 - 1.0*dwdx28 - 1.0*dwdx29;
    J[344] = -1.0*dwdx38;
    J[353] = -1.0*dwdx60;
    J[357] = -1.0*dwdx68;
    J[360] = -1.0*dwdx7;
    J[363] = -1.0*dwdx11;
    J[368] = -1.0*dwdx21;
    J[372] = -1.0*dwdx30 - 1.0*dwdx31 - 1.0*dwdx32;
    J[373] = -1.0*dwdx35;
    J[384] = -1.0*dwdx62;
    J[387] = -1.0*dwdx70;
    J[390] = 1.0*dwdx7;
    J[402] = 1.0*dwdx32;
    J[403] = -1.0*dwdx33 - 1.0*dwdx34 + 1.0*dwdx35;
    J[404] = 1.0*dwdx36;
    J[414] = -1.0*dwdx63;
    J[418] = -1.0*dwdx75;
    J[420] = 1.0*dwdx1;
    J[431] = 1.0*dwdx28;
    J[434] = -1.0*dwdx36 - 1.0*dwdx37 + 1.0*dwdx38 - 1.0*dwdx39;
    J[443] = -1.0*dwdx61;
    J[448] = -1.0*dwdx73;
    J[449] = 1.0*dwdx79;
    J[450] = -1.0*dwdx3;
    J[454] = -1.0*dwdx12;
    J[458] = -1.0*dwdx17;
    J[465] = -1.0*dwdx40 - 1.0*dwdx41;
    J[472] = -1.0*dwdx58;
    J[480] = -1.0*dwdx5;
    J[485] = -1.0*dwdx13;
    J[488] = -1.0*dwdx20;
    J[496] = -1.0*dwdx42 - 1.0*dwdx43 - 1.0*dwdx44;
    J[499] = -1.0*dwdx52;
    J[505] = -1.0*dwdx64;
    J[507] = -1.0*dwdx69;
    J[510] = -1.0*dwdx8;
    J[516] = -1.0*dwdx14;
    J[518] = -1.0*dwdx22;
    J[527] = -1.0*dwdx45 - 1.0*dwdx46 - 1.0*dwdx47;
    J[528] = -1.0*dwdx49;
    J[536] = -1.0*dwdx66;
    J[537] = -1.0*dwdx71;
    J[540] = 1.0*dwdx8;
    J[553] = 1.0*dwdx33;
    J[557] = 1.0*dwdx47;
    J[558] = -1.0*dwdx48 + 1.0*dwdx49;
    J[559] = 1.0*dwdx50;
    J[561] = 1.0*dwdx55;
    J[566] = -1.0*dwdx67;
    J[568] = -1.0*dwdx76;
    J[570] = 1.0*dwdx5;
    J[584] = 1.0*dwdx37;
    J[586] = 1.0*dwdx44;
    J[589] = -1.0*dwdx50 - 1.0*dwdx51 + 1.0*dwdx52;
    J[592] = 1.0*dwdx57;
    J[595] = -1.0*dwdx65;
    J[598] = -1.0*dwdx74;
    J[600] = -1.0*dwdx6;
    J[607] = -1.0*dwdx15;
    J[608] = -1.0*dwdx19;
    J[620] = -1.0*dwdx53 - 1.0*dwdx54;
    J[621] = -1.0*dwdx56;
    J[630] = 1.0*dwdx6;
    J[650] = 1.0*dwdx54;
    J[651] = -1.0*dwdx55 + 1.0*dwdx56;
    J[652] = 1.0*dwdx59;
    J[660] = 1.0*dwdx3;
    J[675] = 1.0*dwdx41;
    J[682] = -1.0*dwdx57 + 1.0*dwdx58 - 1.0*dwdx59;
    J[689] = 1.0*dwdx80;
    J[701] = 1.0*dwdx29;
    J[704] = 1.0*dwdx39;
    J[713] = 1.0*dwdx60 + 1.0*dwdx61;
    J[717] = 1.0*dwdx68;
    J[718] = 1.0*dwdx73;
    J[732] = 1.0*dwdx31;
    J[733] = 1.0*dwdx34;
    J[744] = 1.0*dwdx62 + 1.0*dwdx63;
    J[747] = 1.0*dwdx70;
    J[748] = 1.0*dwdx75;
    J[766] = 1.0*dwdx43;
    J[769] = 1.0*dwdx51;
    J[775] = 1.0*dwdx64 + 1.0*dwdx65;
    J[777] = 1.0*dwdx69;
    J[778] = 1.0*dwdx74;
    J[797] = 1.0*dwdx46;
    J[798] = 1.0*dwdx48;
    J[806] = 1.0*dwdx66 + 1.0*dwdx67;
    J[807] = 1.0*dwdx71;
    J[808] = 1.0*dwdx76;
    J[810] = -1.0*dwdx4;
    J[821] = 1.0*dwdx29;
    J[822] = 1.0*dwdx31;
    J[826] = 1.0*dwdx43;
    J[827] = 1.0*dwdx46;
    J[833] = 1.0*dwdx60;
    J[834] = 1.0*dwdx62;
    J[835] = 1.0*dwdx64;
    J[836] = 1.0*dwdx66;
    J[837] = 1.0*dwdx68 + 1.0*dwdx69 + 1.0*dwdx70 + 1.0*dwdx71 - 1.0*dwdx72;
    J[838] = -1.0*dwdx77;
    J[840] = 1.0*dwdx4;
    J[853] = 1.0*dwdx34;
    J[854] = 1.0*dwdx39;
    J[858] = 1.0*dwdx48;
    J[859] = 1.0*dwdx51;
    J[863] = 1.0*dwdx61;
    J[864] = 1.0*dwdx63;
    J[865] = 1.0*dwdx65;
    J[866] = 1.0*dwdx67;
    J[867] = 1.0*dwdx72;
    J[868] = 1.0*dwdx73 + 1.0*dwdx74 + 1.0*dwdx75 + 1.0*dwdx76 + 1.0*dwdx77;
    J[870] = 1.0*dwdx0;
    J[880] = 1.0*dwdx25;
    J[899] = 1.0*dwdx78 - 1.0*dwdx79 - 1.0*dwdx80;
}