#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "w.h"
#include "p.h"
#include "k.h"
#include "x.h"
#include "dwdx.h"

void J_model0_kofahl(realtype *J, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *w, const realtype *dwdx){
    J[0] = -1.0*dwdx0;
    J[1] = 1.0*dwdx1;
    J[16] = -1.0*dwdx29;
    J[37] = 1.0*dwdx0;
    J[38] = -1.0*dwdx1 - 1.0*dwdx2;
    J[53] = 1.0*dwdx29;
    J[75] = 1.0*dwdx2;
    J[114] = -1.0*dwdx5;
    J[116] = -1.0*dwdx10;
    J[146] = 1.0*dwdx63;
    J[151] = -1.0*dwdx4;
    J[152] = -1.0*dwdx6 - 1.0*dwdx7;
    J[153] = 1.0*dwdx8;
    J[156] = -1.0*dwdx15;
    J[188] = -1.0*dwdx5;
    J[189] = 1.0*dwdx6;
    J[190] = -1.0*dwdx10 - 1.0*dwdx8 - 1.0*dwdx9;
    J[193] = 1.0*dwdx15;
    J[197] = -1.0*dwdx22;
    J[219] = 1.0*dwdx62;
    J[220] = 1.0*dwdx63;
    J[225] = 1.0*dwdx4;
    J[226] = 1.0*dwdx7;
    J[266] = -1.0*dwdx11 - 1.0*dwdx12;
    J[267] = 1.0*dwdx13;
    J[280] = -1.0*dwdx37;
    J[283] = 1.0*dwdx42;
    J[284] = 1.0*dwdx45;
    J[286] = 1.0*dwdx50;
    J[287] = 1.0*dwdx52;
    J[288] = 1.0*dwdx54;
    J[289] = 1.0*dwdx56;
    J[291] = 1.0*dwdx58;
    J[292] = -1.0*dwdx60;
    J[304] = -1.0*dwdx13 - 1.0*dwdx14;
    J[311] = -1.0*dwdx27;
    J[312] = 1.0*dwdx28;
    J[327] = 1.0*dwdx57;
    J[342] = -1.0*dwdx17;
    J[343] = 1.0*dwdx18 + 1.0*dwdx19;
    J[345] = -1.0*dwdx23;
    J[346] = 1.0*dwdx25;
    J[380] = -1.0*dwdx18 - 1.0*dwdx19;
    J[381] = 1.0*dwdx20;
    J[383] = -1.0*dwdx25;
    J[389] = 1.0*dwdx35;
    J[416] = 1.0*dwdx17;
    J[418] = -1.0*dwdx20;
    J[419] = 1.0*dwdx23;
    J[426] = -1.0*dwdx35;
    J[449] = -1.0*dwdx9;
    J[453] = -1.0*dwdx17;
    J[455] = 1.0*dwdx20;
    J[456] = -1.0*dwdx21 - 1.0*dwdx22 - 1.0*dwdx23;
    J[463] = 1.0*dwdx35;
    J[469] = -1.0*dwdx44;
    J[470] = 1.0*dwdx46;
    J[471] = 1.0*dwdx50;
    J[472] = 1.0*dwdx52;
    J[473] = 1.0*dwdx54;
    J[474] = 1.0*dwdx56;
    J[477] = 1.0*dwdx61;
    J[478] = 1.0*dwdx62;
    J[489] = 1.0*dwdx16;
    J[494] = -1.0*dwdx24;
    J[532] = -1.0*dwdx26;
    J[538] = -1.0*dwdx36;
    J[541] = 1.0*dwdx40;
    J[543] = 1.0*dwdx45;
    J[545] = 1.0*dwdx50;
    J[546] = 1.0*dwdx52;
    J[547] = 1.0*dwdx54;
    J[548] = 1.0*dwdx56;
    J[551] = 1.0*dwdx61;
    J[563] = -1.0*dwdx14;
    J[570] = -1.0*dwdx27;
    J[571] = 1.0*dwdx28;
    J[600] = 1.0*dwdx14;
    J[607] = 1.0*dwdx27;
    J[608] = -1.0*dwdx28;
    J[646] = -1.0*dwdx30 - 1.0*dwdx31;
    J[648] = 1.0*dwdx33;
    J[651] = -1.0*dwdx39;
    J[684] = -1.0*dwdx32;
    J[692] = -1.0*dwdx47;
    J[693] = 1.0*dwdx48 + 1.0*dwdx50;
    J[694] = 1.0*dwdx52;
    J[695] = 1.0*dwdx54;
    J[696] = 1.0*dwdx56;
    J[699] = 1.0*dwdx61;
    J[720] = 1.0*dwdx30;
    J[722] = -1.0*dwdx33 - 1.0*dwdx34;
    J[725] = 1.0*dwdx39;
    J[754] = -1.0*dwdx26;
    J[760] = -1.0*dwdx36;
    J[763] = 1.0*dwdx40;
    J[765] = 1.0*dwdx45;
    J[767] = 1.0*dwdx50;
    J[768] = 1.0*dwdx52;
    J[769] = 1.0*dwdx54;
    J[770] = 1.0*dwdx56;
    J[773] = 1.0*dwdx61;
    J[784] = -1.0*dwdx11;
    J[798] = -1.0*dwdx37;
    J[801] = 1.0*dwdx42;
    J[802] = 1.0*dwdx45;
    J[804] = 1.0*dwdx50;
    J[805] = 1.0*dwdx52;
    J[806] = 1.0*dwdx54;
    J[807] = 1.0*dwdx56;
    J[810] = 1.0*dwdx61;
    J[816] = -1.0*dwdx3;
    J[836] = -1.0*dwdx38;
    J[865] = 1.0*dwdx26;
    J[871] = 1.0*dwdx36;
    J[874] = -1.0*dwdx40 - 1.0*dwdx41;
    J[875] = -1.0*dwdx43;
    J[895] = 1.0*dwdx11;
    J[909] = 1.0*dwdx37;
    J[911] = -1.0*dwdx41;
    J[912] = -1.0*dwdx42 - 1.0*dwdx43;
    J[937] = -1.0*dwdx21;
    J[948] = 1.0*dwdx41;
    J[949] = 1.0*dwdx43;
    J[950] = -1.0*dwdx44 - 1.0*dwdx45;
    J[951] = 1.0*dwdx46;
    J[974] = 1.0*dwdx21;
    J[980] = -1.0*dwdx32;
    J[987] = 1.0*dwdx44;
    J[988] = -1.0*dwdx46 - 1.0*dwdx47;
    J[989] = 1.0*dwdx48;
    J[1017] = 1.0*dwdx32;
    J[1025] = 1.0*dwdx47;
    J[1026] = -1.0*dwdx48 - 1.0*dwdx49 - 1.0*dwdx50;
    J[1063] = 1.0*dwdx49;
    J[1064] = -1.0*dwdx51 - 1.0*dwdx52;
    J[1101] = 1.0*dwdx51;
    J[1102] = -1.0*dwdx53 - 1.0*dwdx54;
    J[1139] = 1.0*dwdx53;
    J[1140] = -1.0*dwdx55 - 1.0*dwdx56;
    J[1177] = 1.0*dwdx55;
    J[1178] = -1.0*dwdx57;
    J[1179] = 1.0*dwdx59;
    J[1191] = 1.0*dwdx12;
    J[1216] = -1.0*dwdx58 - 1.0*dwdx59;
    J[1217] = 1.0*dwdx60;
    J[1228] = -1.0*dwdx12;
    J[1252] = 1.0*dwdx57;
    J[1253] = 1.0*dwdx58;
    J[1254] = -1.0*dwdx60 - 1.0*dwdx61;
    J[1263] = 1.0*dwdx9;
    J[1270] = 1.0*dwdx22;
    J[1292] = -1.0*dwdx62;
    J[1298] = 1.0*dwdx5;
    J[1300] = 1.0*dwdx10;
    J[1330] = -1.0*dwdx63;
}