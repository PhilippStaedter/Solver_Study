#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"
#include <cmath>


#include "tcl.h"
#include "p.h"
#include "k.h"
#include "x.h"

void w_Singh2006(realtype *w, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *tcl){
    w[0] = 1.0*IL6*kf0*x1;
    w[1] = 1.0*kr0*x2;
    w[2] = -1.0*kf2*x2*x5 + 1.0*kr2*x6;
    w[3] = 1.0*kf1*x3*x4 - 1.0*kr1*x5;
    w[4] = 1.0*kf3*pow(x6, 2);
    w[5] = 1.0*kr3*x7;
    w[6] = 1.0*k4*x7;
    w[7] = 1.0*k10*x16;
    w[8] = 1.0*kf5*x8*x9 - 1.0*kr5*x11;
    w[9] = 1.0*k6*x11;
    w[10] = 1.0*kf7*x10*x8 - 1.0*kr7*x12;
    w[11] = 1.0*kf9*x15*x8 - 1.0*kr9*x16;
    w[12] = 1.0*kf21*x29*x8 - 1.0*kr21*x30;
    w[13] = 1.0*kf37*x39 - 1.0*kr37*x46*x8;
    w[14] = 1.0*kf39*x40 - 1.0*kr39*x45*x8;
    w[15] = 1.0*kf32*x41 - 1.0*kr32*x44*x8;
    w[16] = 1.0*k12*x18;
    w[17] = 1.0*kf13*x10*x9 - 1.0*kr13*x14;
    w[18] = 1.0*k17*x22;
    w[19] = 1.0*kf5*x30*x9 - 1.0*kr5*x31;
    w[20] = 1.0*k10*x32;
    w[21] = 2.0*kf8*pow(x10, 2) - 2.0*kr8*x13;
    w[22] = 1.0*kf11*x10*x17 - 1.0*kr11*x18;
    w[23] = 1.0*kf11*x13*x17 - 1.0*kr11*x19;
    w[24] = 1.0*k14*x13;
    w[25] = 1.0*k12*x19;
    w[26] = 1.0*kf9*x15*x31 - 1.0*kr9*x32;
    w[27] = 1.0*Vm*x46/(Km + x46);
    w[28] = 1.0*kf34*x16 - 1.0*kr34*x39;
    w[29] = -1.0*kf8*pow(x21, 2) + 1.0*kr8*x20;
    w[30] = 1.0*kf15*x20*x23 - 1.0*kr15*x27;
    w[31] = 1.0*kf15*x21*x23 - 1.0*kr15*x28;
    w[32] = -1.0*kf13*x21*x22 + 1.0*kr13*x24;
    w[33] = 1.0*k16*x28;
    w[34] = 1.0*k16*x27;
    w[35] = 1.0*k18a*x20/(k18b + x20);
    w[36] = 1.0*k19*x25;
    w[37] = 1.0*k22*x26;
    w[38] = 1.0*k20*x26;
    w[39] = 1.0*k23*x29;
    w[40] = 1.0*k23*x32;
    w[41] = 1.0*kf38*x34*x46 - 1.0*kr38*x45;
    w[42] = 1.0*kf35*x38 - 1.0*kr35*x34*x35;
    w[43] = 1.0*kf24*x34*x39 - 1.0*kr24*x40;
    w[44] = 1.0*kf25*x35*x40 - 1.0*kr25*x41;
    w[45] = 1.0*kf40*x35*x45 - 1.0*kr40*x44;
    w[46] = 1.0*kf26*x36*x41 - 1.0*kr26*x42;
    w[47] = 1.0*kf31*x43 - 1.0*kr31*x36*x41;
    w[48] = 1.0*kf27*x42 - 1.0*kr27*x37*x41;
    w[49] = 1.0*kf28*x37*x47 - 1.0*kr28*x48;
    w[50] = 1.0*kf41*x38*x39 - 1.0*kr41*x41;
    w[51] = 1.0*kf33*x44 - 1.0*kr33*x38*x46;
    w[52] = 1.0*kf30*x41*x49 - 1.0*kr30*x43;
    w[53] = 1.0*k43*x52;
    w[54] = 1.0*kf29*x48 - 1.0*kr29*x49*x51;
    w[55] = 1.0*kf42*x50*x51 - 1.0*kr42*x52;
    w[56] = 1.0*kf44*x51*x53 - 1.0*kr44*x54;
    w[57] = 1.0*k45*x54;
    w[58] = 1.0*kf46*x51*x55 - 1.0*kr46*x56;
    w[59] = 1.0*k51*x60;
    w[60] = 1.0*k49*x58;
    w[61] = 1.0*kf50*x55*x59 - 1.0*kr50*x60;
    w[62] = 1.0*k47*x56;
    w[63] = 1.0*kf48*x57*x59 - 1.0*kr48*x58;
    w[64] = 1.0*kf52*x57*x61 - 1.0*kr52*x62;
    w[65] = 1.0*k53*x62;
    w[66] = -1.0*kf54*x57*x63 + 1.0*kr54*x64;
    w[67] = 1.0*k55*x64;
    w[68] = 1.0*k59*x68;
    w[69] = 1.0*k57*x67;
    w[70] = 1.0*kf58*x63*x66 - 1.0*kr58*x68;
    w[71] = 1.0*kf56*x65*x66 - 1.0*kr56*x67;
}